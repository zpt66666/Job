职业生涯管理系统项目总结

1. 项目概述
   本项目是一个基于 Spring Boot 的职业生涯管理系统，旨在提供用户登录、个人信息管理、简历工具、模拟面试、行动计划等功能。

2. 技术栈
   - 后端：
     - Spring Boot：用于快速开发 Spring 应用程序
     - Spring MVC：用于构建 Web 应用程序
     - MyBatis：用于数据库操作
     - MySQL：关系型数据库
     - Maven：项目管理和构建工具
   - 前端：
     - HTML/CSS/JavaScript：基础前端技术
     - jQuery：用于简化 JavaScript 操作
     - Bootstrap：用于快速构建响应式网页

3. 功能模块
   a. 用户登录
      - 实现：使用 Spring Security 进行用户认证和授权
      - 前端通过 AJAX 发送登录请求到后端
      - 后端验证用户信息并返回登录状态

   b. 个人信息管理
      - 实现：用户信息存储在 MySQL 数据库中
      - 通过 MyBatis 进行数据库操作
      - 前端通过表单提交用户信息，后端进行保存和更新

   c. 简历工具
      - 实现：简历信息存储在 MySQL 数据库中
      - 使用 MyBatis 进行数据库操作
      - 前端通过表单提交简历信息，后端进行保存和更新
      - 支持教育经历、工作经历、技能、项目经历等信息的录入

   d. 模拟面试
      - 实现：面试问题存储在数据库中
      - 前端通过 AJAX 获取面试问题
      - 后端随机选择问题并返回给前端

   e. 行动计划
      - 实现：使用内存存储（ActionPlanRepositoryInMemory）保存行动计划
      - 前端通过表单提交计划，后端进行保存
      - 支持查看最新计划

4. 数据库设计
   - 用户表（user）：存储用户基本信息
   - 简历表（user_resume）：存储用户简历信息
   - 教育经历表（resume_education）：存储用户教育经历
   - 工作经历表（resume_experience）：存储用户工作经历
   - 技能表（resume_skill）：存储用户技能
   - 项目经历表（resume_project）：存储用户项目经历

5. 项目部署
   - 后端部署：使用 Maven 打包，通过 Java 命令启动
   - 前端部署：使用 Nginx 等 Web 服务器部署静态文件

6. 问题与解决方案
   - 日志问题：通过配置 logback-spring.xml 限制日志大小和保留时间
   - 登录问题：通过修改前端 AJAX 请求地址和后端包扫描配置解决
   - 简历保存问题：通过统一前后端接口地址、修复前端 JavaScript 加载问题、修改后端 Session 获取逻辑解决

7. 学习建议
   - 学习 Spring Boot 和 Spring MVC 的基础知识
   - 了解 MyBatis 的使用方法
   - 学习前端技术（HTML/CSS/JavaScript/jQuery）
   - 熟悉数据库设计和 SQL 语句
   - 学习项目部署和运维知识

8. 联系方式
   - 如有问题，请联系系统管理员

9. 版权信息
   - 本系统版权归作者：JASON所有 